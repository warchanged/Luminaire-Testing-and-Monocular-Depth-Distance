# Jetson AGX Orin Dockerfile
# 基于 NVIDIA L4T (Linux for Tegra) PyTorch 镜像

FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# 配置 HuggingFace 缓存
ENV HF_HOME=/app/.cache/huggingface
ENV TRANSFORMERS_CACHE=/app/.cache/huggingface

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-dev \
    libopenblas-dev \
    libopenmpi-dev \
    libomp-dev \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev \
    git \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 升级 pip
RUN pip3 install --upgrade pip setuptools wheel

# 安装 Python 依赖
COPY requirements.txt /app/
RUN pip3 install --no-cache-dir -r requirements.txt

# 安装 Jetson 专用优化库
RUN pip3 install --no-cache-dir \
    torch-tensorrt \
    jetson-stats

# 复制项目文件
COPY *.py /app/
COPY *.yaml /app/
COPY config.yaml /app/

# 创建缓存目录
RUN mkdir -p /app/.cache/huggingface /app/models /app/results

# 设置权限
RUN chmod +x /app/*.py

# 暴露 Gradio 端口
EXPOSE 7860

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:7860/ || exit 1

# 启动命令 (使用 Jetson 优化版)
CMD ["python3", "gradio_app_jetson.py"]
